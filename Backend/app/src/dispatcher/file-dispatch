import express = require("express");
import {FileBoImpl} from "../business/file-bo-impl";
import {error} from "util";
import cors = require("cors");
import axios = require("axios");


const fileDispatcher = express.Router();

fileDispatcher.route("")
    .get((req, res) => {

        const promise = new FileBoImpl().findAllFile();
        promise.then(fies=>{
            res.status(200).json(fies);
        }).catch(error=>{
            res.status(500).send(error);
        });

    })
    .post((req, res) => {

        if (!("file" in req.body)){
            res.status(400).send("Invalid Request Body");
            return;
        }
        const promise = new FileBoImpl().saveFile(req.body);
        promise.then(status => res.status(201).json(status))
            .catch(err=>res.status(500).send(err));

    })
    .head((cors({
        exposedHeaders:['X-Count']
    })),(req, res) => {
        const t1= new Date().valueOf();// time stamp
        const promise = new FileBoImpl().fileCount();
        promise.then(count=>{
            res.append("X-Count",count+"");
            res.sendStatus(200);
        }).catch(error=>{
            res.status(500);
        });
    })
;


fileDispatcher.route("/:file")
    .get((req, res) => {

        const promise = new FileBoImpl().findFile(req.params.file);
        promise.then(files=>{

            if (files.length > 0){
                res.status(200).send(files[0]);
            }else{
                res.sendStatus(404);
            }

        }).catch(error=>{
            res.status(500).send(error);
        });

    })
    .delete((req, res) => {

        const promise = new FileBoImpl().deleteFile(req.params.file);
        promise.then(status=>{

            if (status){
                res.status(200).send(true);
            }else{
                res.sendStatus(404);
            }

        }).catch(error=>{
            res.status(500).send(error);
        });

    })
    .put((req, res) => {

        if (!("file" in req.body )){
            res.status(400).send("Invalid Request Body");
            return;
        }

        if (req.body.id !== req.params.file){
            res.status(400).send("Mismatched Customer ID");
            return;
        }

        const promise = new FileBoImpl().updateFile(req.body);
        promise.then(status=>{

            if (status){
                res.status(200).send(true);
            }else{
                res.sendStatus(404);
            }

        }).catch(error=>{
            res.status(500).send(error);
        });

    });

export default fileDispatcher;
